{"version":3,"sources":["common/SuperInputText/SuperInputText.module.css","common/SuperButton/SuperButton.module.css","common/SuperCheckbox/SuperCheckbox.module.css","components/error/Error404.tsx","components/Registration.tsx","components/NewPass.tsx","components/RestorePass.tsx","components/Profile.tsx","common/SuperInputText/SuperInputText.tsx","common/SuperButton/SuperButton.tsx","common/SuperCheckbox/SuperCheckbox.tsx","components/Test.tsx","components/Login.tsx","components/routes/Routes.tsx","App.tsx","reportWebVitals.ts","bll/firstReducer.ts","bll/store.ts","index.tsx","components/error/Error404.module.css"],"names":["module","exports","Error404","className","s","body","mainbox","err","err3","err2","msg","href","Registration","NewPass","RestorePass","Profile","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","button","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","Test","Login","PATH","Routes","path","exact","render","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LOADING_TYPE","initState","reducers","combineReducers","reducer","state","action","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,mBCA1HD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,yBAAyB,OAAS,4BAA4B,MAAQ,6B,mBCArID,EAAOC,QAAU,CAAC,MAAQ,6BAA6B,SAAW,kC,uICkBnDC,MAhBf,WACI,OAEI,qBAAKC,UAAWC,IAAEC,KAAlB,SACI,sBAAKF,UAAWC,IAAEE,QAAlB,UACI,qBAAKH,UAAWC,IAAEG,IAAlB,eACA,qBAAKJ,UAAWC,IAAEI,KAAlB,eACA,qBAAKL,UAAWC,IAAEK,KAAlB,eACA,sBAAKN,UAAWC,IAAEM,IAAlB,+GACoB,0CAAY,mBAAGC,KAAK,IAAR,kBAAZ,mCCZvBC,EAAe,WACxB,OAAO,0CCDEC,EAAU,WACnB,OAAO,0CCDEC,EAAc,WACvB,OAAO,0CCDEC,EAAU,WACnB,OAAO,0C,iCCyDIC,EA3C2C,SAAC,GAWtD,EATGC,KASF,IAREC,EAQH,EARGA,SAAUC,EAQb,EARaA,aACVC,EAOH,EAPGA,WAAYC,EAOf,EAPeA,QACZC,EAMH,EANGA,MACAnB,EAKH,EALGA,UAAWoB,EAKd,EALcA,cAERC,EAGN,6GAeKC,EAAkB,UAAMrB,IAAEkB,MAAR,YAAiBC,GAAgC,IACnEG,EAAuBJ,EAAK,UAAMlB,IAAEuB,WAAR,aAAuBvB,IAAEwB,WAAzB,YAAuCzB,GAAwB,IAA/D,UAAyEC,IAAEwB,WAA3E,YAAyFzB,GAAwB,IACnJ,OACI,qCACI,mCACIc,KAAM,OACNC,SApBa,SAACW,GACtBX,GACGA,EAASW,GAEZV,GAAgBA,EAAaU,EAAEC,cAAcC,QAiBrCX,WAfe,SAACS,GACxBT,GAAcA,EAAWS,GAEzBR,GACa,UAAVQ,EAAEG,KACFX,KAWKlB,UAAWuB,GAEPF,IAEPF,GAAS,sBAAMnB,UAAWsB,EAAjB,SAAsCH,Q,iBC3B7CW,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAK/B,EAGR,EAHQA,UACFqB,EAEN,mCACKW,EAAc,UAAMD,EAAM9B,IAAE8B,IAAM,IAAM9B,IAAEgC,QAAUhC,IAAEgC,QAAxC,YAAmDjC,EAAnD,YAAgEC,IAAEiC,QAEtF,OACI,oCACIlC,UAAWgC,GACPX,K,iBCuBDc,EAjCyC,SAAC,GASpD,EAPGrB,KAOF,IANEC,EAMH,EANGA,SAAUqB,EAMb,EANaA,gBACVpC,EAKH,EALGA,UACAqC,GAIH,EALcjB,cAKd,EAJGiB,UAEGhB,EAEN,4FAQKE,EAAmB,UAAMtB,IAAEqC,SAAR,YAAoBtC,GAAwB,IAErE,OACI,wBAAOA,UAAWC,IAAEsC,MAApB,UACI,mCACIzB,KAAM,WACNC,SAba,SAACW,GACtBX,GACGA,EAASW,GAEZU,GAAmBA,EAAgBV,EAAEC,cAAca,UAU3CxC,UAAWuB,GAEPF,IAEPgB,GAAY,uBAAMrC,UAAWC,IAAEmB,cAAnB,cAAoCiB,SCnChDI,EAAO,WAChB,OAAO,qCACP,cAAC,EAAD,IACA,cAAC,EAAD,qBAGA,cAAC,EAAD,QCVSC,EAAQ,WACjB,OAAO,0CCQEC,EACF,SADEA,EAEK,gBAFLA,EAGA,WAHAA,EAIK,gBAJLA,EAKC,QALDA,EAMH,QAyBKC,MAtBf,WAEI,OACI,8BAEI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAUC,GAAIL,OAEpD,cAAC,IAAD,CAAOE,KAAMF,EAAYI,OAAQ,kBAAM,cAAC,EAAD,OACvC,cAAC,IAAD,CAAOF,KAAMF,EAAmBI,OAAQ,kBAAM,cAAC,EAAD,OAC9C,cAAC,IAAD,CAAOF,KAAMF,EAAeI,OAAQ,kBAAM,cAAC,EAAD,OAC1C,cAAC,IAAD,CAAOF,KAAMF,EAAmBI,OAAQ,kBAAM,cAAC,EAAD,OAC9C,cAAC,IAAD,CAAOF,KAAMF,EAAcI,OAAQ,kBAAM,cAAC,EAAD,OACxC,cAAC,IAAD,CAAOF,KAAMF,EAAWI,OAAQ,kBAAM,cAAC,EAAD,OACtC,cAAC,IAAD,CAAOA,OAAQ,kBAAM,cAAC,EAAD,a,QCpBvBE,MATf,WACE,OAAO,8BACP,cAAC,IAAD,UACE,cAAC,EAAD,SCOWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCTRQ,EAAe,eAEfC,EAAY,GCCZC,EAAWC,YAAgB,CAC7BC,QDIwB,WAA2E,IAA1EC,EAAyE,uDAAnDJ,EAAWK,EAAwC,uCAClG,OAAQA,EAAOnD,MACX,KAAK6C,EAGL,QAAS,OAAOK,MCHTE,EAFDC,YAAYN,GCA1BO,IAASrB,OACP,cAAC,IAAMsB,WAAP,UACI,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACF,cAAC,EAAD,QAGFI,SAASC,eAAe,SAM1BrB,K,kBCnBArD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,QAAU,0BAA0B,IAAM,sBAAsB,KAAO,uBAAuB,KAAO,uBAAuB,IAAM,yB","file":"static/js/main.cf41b87a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1hpOn\",\"errorInput\":\"SuperInputText_errorInput__2RwBZ\",\"error\":\"SuperInputText_error__22Sz7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2Ewif\",\"red\":\"SuperButton_red__2UtgR\",\"button\":\"SuperButton_button__2koq7\",\"blink\":\"SuperButton_blink__2YZ08\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__36Jz3\",\"checkbox\":\"SuperCheckbox_checkbox__XK4PV\"};","import React from 'react'\nimport s from './Error404.module.css'\n\nfunction Error404() {\n    return (\n\n        <div className={s.body}>\n            <div className={s.mainbox}>\n                <div className={s.err}>4</div>\n                <div className={s.err3}>0</div>\n                <div className={s.err2}>4</div>\n                <div className={s.msg}>Maybe this page moved? Got deleted? Is hiding out in quarantine? Never existed in\n                    the first place?<p>Let's go <a href=\"#\">home</a> and try from there.</p></div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Error404\n","export const Registration = () => {\r\n    return <> </>\r\n}","export const NewPass = () => {\r\n    return <> </>\r\n}","export const RestorePass = () => {\r\n    return <> </>\r\n}","export const Profile = () => {\r\n    return <> </>\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n    //т.е мы пишем,какие пропсы будем использовать, а остальные отправляем в рестПропс\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName =  error ? `${s.errorInput}  ${s.superInput} ${className ? className : ''}` : `${s.superInput} ${className ? className : ''}`\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red + ' ' + s.default : s.default} ${className} ${s.button}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange\n        && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.label}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}> {children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import SuperInputText from \"../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../common/SuperCheckbox/SuperCheckbox\";\r\n\r\nexport const Test = () => {\r\n    return <>\r\n    <SuperInputText/>\r\n    <SuperButton>\r\n        BUTTON\r\n    </SuperButton>\r\n    <SuperCheckbox/>\r\n\r\n    </>\r\n}","export const Login = () => {\r\n    return <> </>\r\n}","import {Switch,Redirect, Route} from \"react-router\";\r\nimport Error404 from \"../error/Error404\";\r\nimport {Registration} from \"../Registration\";\r\nimport {NewPass} from \"../NewPass\";\r\nimport {RestorePass} from \"../RestorePass\";\r\nimport {Profile} from \"../Profile\";\r\nimport {Test} from \"../Test\";\r\nimport {Login} from \"../Login\";\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    RESTORE_PASS: '/restore_pass',\r\n    NEW_PASS: '/pass',\r\n    TEST: '/test',\r\n}\r\n\r\nfunction Routes() {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Switch>\r\n\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.TEST}/>}/>\r\n\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n                <Route path={PATH.NEW_PASS} render={() => <NewPass/>}/>\r\n                <Route path={PATH.RESTORE_PASS} render={() => <RestorePass/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                 <Route path={PATH.TEST} render={() => <Test/>}/>\r\n                 <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react';\nimport Routes from \"./components/routes/Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction App() {\n  return <div>\n  <HashRouter>\n    <Routes/>\n  </HashRouter>\n</div>\n\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const LOADING_TYPE = 'LOADING_TYPE'\r\n\r\nconst initState = {\r\n\r\n}\r\nexport type initStateType = {\r\n\r\n}\r\nexport const firstReducer = (state:initStateType = initState, action: DispatchType): initStateType => {\r\n    switch (action.type) {\r\n        case LOADING_TYPE: {\r\n            return state\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport type DispatchType = loadingACType\r\n\r\ntype loadingACType = ReturnType<typeof loadingAC>\r\n\r\nexport const loadingAC = () => {\r\n    return {type: LOADING_TYPE} as const\r\n}","import {combineReducers, createStore} from \"redux\";\r\nimport { firstReducer } from \"./firstReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    reducer: firstReducer,\r\n\r\n})\r\n\r\nconst store = createStore(reducers)\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./bll/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n    <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Error404_body__qChk4\",\"mainbox\":\"Error404_mainbox__1leSz\",\"err\":\"Error404_err__2HpMM\",\"err3\":\"Error404_err3__ShD99\",\"err2\":\"Error404_err2__nzPox\",\"msg\":\"Error404_msg__2Vq8h\"};"],"sourceRoot":""}